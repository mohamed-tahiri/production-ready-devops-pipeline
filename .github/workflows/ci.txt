name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  install-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache backend dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            backend/node_modules
          key: ${{ runner.os }}-node-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-backend-

      - name: Install backend dependencies
        working-directory: backend
        run: npm ci

  install-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache frontend dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            frontend/node_modules
          key: ${{ runner.os }}-node-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-frontend-

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

  test-backend:
    needs: install-backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Run backend tests
        working-directory: backend
        run: npm test

  lint-backend:
    needs: install-backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        working-directory: backend
        run: npm ci

      - name: Run backend lint
        working-directory: backend
        run: npm run lint

  lint-frontend:
    needs: install-frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Run frontend lint
        working-directory: frontend
        run: npm run lint

  build-frontend:
    needs: install-frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Build frontend
        working-directory: frontend
        run: npm run build
  
  docker-build:
    needs: [build-frontend, install-backend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Optional: Docker Hub login (replace with your secrets if pushing)
      #- name: Log in to Docker Hub
      #  uses: docker/login-action@v2
      #  with:
      #    username: ${{ secrets.DOCKER_USERNAME }}
      #    password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build backend Docker image with BuildKit
        run: |
          DOCKER_BUILDKIT=1 docker build -t my-backend:latest -f backend/Dockerfile backend/

      - name: Build frontend Docker image with BuildKit
        run: |
          DOCKER_BUILDKIT=1 docker build -t my-frontend:latest -f frontend/Dockerfile frontend/

      # Optional: Push images to Docker Hub
      #- name: Push backend image
      #  run: docker push my-backend:latest

      #- name: Push frontend image
      #  run: docker push my-frontend:latest
